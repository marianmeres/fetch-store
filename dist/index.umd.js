!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["fetch-store"]={})}(this,(function(t){"use strict";const e=t=>"function"==typeof t,r=(t,r="")=>{if(!e(t))throw new TypeError(`${r} Expecting function arg`.trim())},s=t=>e(t.subscribe),n=(t,s=null)=>{const n=t=>e(s?.persist)&&s.persist(t);let a=(()=>{const t=new Map,e=e=>(t.has(e)||t.set(e,new Set),t.get(e)),r=(t,r)=>{if("function"!=typeof r)throw new TypeError("Expecting callback function as second argument");return e(t).add(r),()=>e(t).delete(r)};return{publish:(t,r)=>{e(t).forEach((t=>t(r)))},subscribe:r,subscribeOnce:(t,e)=>{const s=r(t,(t=>{e(t),s()}));return s},unsubscribeAll:e=>t.delete(e)}})(),l=t;n(l);const c=()=>l,i=t=>{l!==t&&(l=t,n(l),a.publish("change",l))};return{set:i,get:c,update:t=>{r(t,"[update]"),i(t(c()))},subscribe:t=>(r(t,"[subscribe]"),t(l),a.subscribe("change",t))}},a={fetchOnceDefaultThresholdMs:3e5,isEqual:(t,e)=>t===e};t.createFetchStore=(t,l=null,c=null,i={})=>{const{fetchOnceDefaultThresholdMs:o,isEqual:u}={...a,...i||{}},h=(t,e)=>"function"==typeof c?c?.(t,e):t,f=n(h(l),i),d=n({isFetching:!1,lastFetchStart:null,lastFetchEnd:null,lastFetchError:null,successCounter:0,lastFetchSilentError:null,isStreaming:!1,lastFetchStreamStart:null,lastFetchStreamEnd:null,lastFetchStreamError:null}),{subscribe:g,get:E}=((t,a,l=null)=>{const c=t=>e(l?.persist)&&l.persist(t),i=n(l?.initialValue),o=[];if(t.forEach((t=>{if(!s(t))throw new TypeError("Expecting array of StoreLike objects");t.subscribe((t=>o.push(t)))()})),!e(a))throw new TypeError("Expecting second argument to be the derivative function");if(!a.length||a.length>2)throw new TypeError("Expecting the derivative function to have exactly 1 or 2 arguments");let u=0,h=[];return{get:i.get,subscribe:e=>{r(e,"[derived.subscribe]"),u++||t.forEach(((t,e)=>{h.push(t.subscribe((t=>{o[e]=t,1===a.length?(i.set(a(o)),c(i.get())):a(o,(t=>{i.set(t),c(i.get())}))})))}));const s=i.subscribe(e);return()=>{--u||(h.forEach((t=>t())),h=[]),s()}}}})([f,d],(([t,e])=>({data:t,...e})));g((()=>null));const F=async(...e)=>{let r=d.get();r.isFetching=!0,r.lastFetchStart=new Date,r.lastFetchEnd=null,r.lastFetchError=null,d.set({...r});try{f.set(h(await t(...e),f.get())),r.successCounter++}catch(t){r.lastFetchError=t}finally{r.isFetching=!1,r.lastFetchEnd=new Date}return d.set({...r}),d.get().lastFetchError?null:f.get()},p=async(...e)=>{let r=d.get(),s=0;r.lastFetchSilentError&&(d.set({...r,lastFetchSilentError:null}),s++);try{f.set(h(await t(...e),f.get()))}catch(t){r.lastFetchSilentError=t,s++}return s&&d.set({...r}),d.get().lastFetchSilentError?null:f.get()};let S;const b=(t=[],e=500)=>(Array.isArray(t)||(t=[t]),p(...t).then((()=>{if(!1===S)return S=void 0;S&&(clearTimeout(S),S=void 0),S=setTimeout((()=>b(t,e)),e)})),()=>{S?(clearTimeout(S),S=void 0):S=!1});let m;const y=async(e=[],r=0)=>{let s;Array.isArray(e)||(e=[e]),d.update((t=>({...t,isStreaming:!0,lastFetchStreamStart:new Date,lastFetchStreamEnd:null,lastFetchStreamError:null})));let n=()=>{"function"==typeof s?s():console.warn("This is a noop as the fetchWorker did not return a function."),m?(clearTimeout(m),m=void 0):m=!1};try{s=await t(((t,s)=>{if(t=`${t||""}`.toLowerCase(),d.get().lastFetchStreamError&&d.update((t=>({...t,lastFetchStreamError:null}))),"data"===t)f.set(h(s,f.get()));else if("error"===t)d.update((t=>({...t,lastFetchStreamError:s})));else if("end"===t&&(d.update((t=>({...t,isStreaming:!1,lastFetchStreamEnd:new Date}))),r>0)){if(!1===m)return m=void 0;m&&(clearTimeout(m),m=void 0),m=setTimeout((async()=>{n=await y(e,r)}),r)}}),...e)}catch(t){d.update((e=>({...e,lastFetchStreamError:t})))}return n};return{subscribe:g,get:E,fetch:F,fetchSilent:p,fetchOnce:async(t=[],e=o)=>{const{successCounter:r,isFetching:s,lastFetchStart:n}=d.get();return Array.isArray(t)||(t=[t]),r||s?e&&!s&&n&&Date.now()-new Date(n).valueOf()>e?await F(...t):f.get():await F(...t)},fetchRecursive:b,fetchStream:y,reset:()=>{f.set(h(l)),d.set({isFetching:!1,lastFetchStart:null,lastFetchEnd:null,lastFetchError:null,successCounter:0,lastFetchSilentError:null,isStreaming:!1,lastFetchStreamStart:null,lastFetchStreamEnd:null,lastFetchStreamError:null})},resetError:()=>d.update((t=>({...t,lastFetchError:null}))),getInternalDataStore:()=>f,fetchWorker:t}}}));
