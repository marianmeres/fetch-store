"use strict";const e=e=>"function"==typeof e,t=(t,r="")=>{if(!e(t))throw new TypeError(`${r} Expecting function arg`.trim())},r=t=>e(t.subscribe),s=(r=undefined,s=null)=>{const n=t=>e(s?.persist)&&s.persist(t);let c=(()=>{const e=new Map,t=t=>(e.has(t)||e.set(t,new Set),e.get(t)),r=(e,r)=>{if("function"!=typeof r)throw new TypeError("Expecting callback function as second argument");return t(e).add(r),()=>t(e).delete(r)};return{publish:(e,r={})=>{t(e).forEach((e=>e(r)))},subscribe:r,subscribeOnce:(e,t)=>{const s=r(e,(e=>{t(e),s()}));return s},unsubscribeAll:t=>e.delete(t)}})(),a=r;n(a);const l=()=>a,u=e=>{a!==e&&(a=e,n(a),c.publish("change",a))};return{set:u,get:l,update:e=>{t(e,"[update]"),u(e(l()))},subscribe:e=>(t(e,"[subscribe]"),e(a),c.subscribe("change",e))}},n={fetchOnceDefaultThresholdMs:3e5},c=e=>"function"==typeof e;exports.createFetchStore=(a,l=null,u=null,i=null)=>{const{logger:o,onError:h,onSilentError:g,afterCreate:b,fetchOnceDefaultThresholdMs:f}={...n,...i||{}},p=(e,t)=>c(u)?u(e,t):e,E=s(p(l)),d=s({isFetching:!1,lastFetchStart:null,lastFetchEnd:null,lastFetchError:null,successCounter:0}),{subscribe:w,get:F}=((n,c,a=null)=>{const l=t=>e(a?.persist)&&a.persist(t),u=s(a?.initialValue),i=[];if(n.forEach((e=>{if(!r(e))throw new TypeError("Expecting array of StoreLike objects");e.subscribe((e=>i.push(e)))()})),!e(c))throw new TypeError("Expecting second argument to be the derivative function");if(!c.length||c.length>2)throw new TypeError("Expecting the derivative function to have exactly 1 or 2 arguments");let o=0,h=[];return{get:u.get,subscribe:e=>{t(e,"[derived.subscribe]"),o++||n.forEach(((e,t)=>{h.push(e.subscribe((e=>{i[t]=e,1===c.length?(u.set(c(i)),l(u.get())):c(i,(e=>{u.set(e),l(u.get())}))})))}));const r=u.subscribe(e);return()=>{--o||(h.forEach((e=>e())),h=[]),r()}}}})([E,d],(([e,t])=>({data:e,...t})));w((()=>null));const y=async(...e)=>{let t=E.get(),r=d.get();const s=new Date;let n=null;d.set({...r,isFetching:!0,lastFetchStart:s,lastFetchEnd:null,lastFetchError:n});try{t=p(await a(...e),t),r.successCounter++}catch(e){n=e}E.set(t),d.set({...r,isFetching:!1,lastFetchStart:s,lastFetchEnd:new Date,lastFetchError:n}),n&&c(h)&&h(n)},S={subscribe:w,get:F,fetch:y,fetchSilent:async(...e)=>{try{E.set(p(await a(...e),E.get()))}catch(e){((...e)=>{c(o)&&o.apply(null,e)})("silent fetch error",e),c(g)&&g(e)}},fetchOnce:async(e=[],t=f)=>{const{successCounter:r,isFetching:s,lastFetchStart:n}=d.get();return Array.isArray(e)||(e=[e]),r||s?t&&!s&&n&&Date.now()-new Date(n).valueOf()>t?await y(...e):void 0:await y(...e)},reset:()=>{E.set(p(l)),d.set({isFetching:!1,lastFetchStart:null,lastFetchEnd:null,lastFetchError:null,successCounter:0})},resetError:()=>d.update((e=>({...e,lastFetchError:null}))),getInternalDataStore:()=>E};return c(b)&&b(S),S};
